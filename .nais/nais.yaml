apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: dp-dataprodukter
  namespace: teamdagpenger
  labels:
    team: teamdagpenger
spec:
  image: "{{image}}"
  kafka:
    pool: "{{kafka.pool}}"
  replicas:
    min: 2
    max: 4
  secureLogs:
    enabled: true
  env:
    - name: KAFKA_CONSUMER_GROUP_ID
      value: dp-data-innlop-v1
    - name: KAFKA_RAPID_TOPIC
      value: teamdagpenger.rapid.v1
    - name: KAFKA_EXTRA_TOPIC
      value: teamdagpenger.journalforing.v1
    - name: KAFKA_RESET_POLICY
      value: EARLIEST
    - name: KAFKA_PRODUKT_TOPIC
      value: teamdagpenger.data-innlop-v2
    - name: KAFKA_PRODUKT_SOKNAD_FAKTUM_TOPIC
      value: teamdagpenger.data-soknad-faktum-v1
    - name: KAFKA_PRODUKT_SOKNAD_TILSTAND_TOPIC
      value: teamdagpenger.data-soknad-tilstand-v1
    - name: KAFKA_PRODUKT_SOKNAD_DOKUMENTKRAV_TOPIC
      value: teamdagpenger.data-soknad-dokumentkrav-v1
    - name: KAFKA_PRODUKT_BEHANDLING_TOPIC
      value: teamdagpenger.data-behandling-beta-v2
    - name: KAFKA_PRODUKT_VEDTAK_TOPIC
      value: teamdagpenger.data-vedtak-v1
    - name: KAFKA_PRODUKT_BEHANDLING_TILSTAND_TOPIC
      value: teamdagpenger.data-behandling-tilstand-v1
    - name: PDL_ENDPOINT
      value: https://{{pdl.host}}/graphql
    - name: PDL_SCOPE
      value: "{{pdl.scope}}"
  accessPolicy:
    outbound:
      external:
        - host: "{{pdl.host}}"
  azure:
    application:
      enabled: true
  gcp:
    sqlInstances:
      - type: POSTGRES_16
        tier: "{{db.tier}}"
        highAvailability: true
        databases:
          - name: dataprodukt
            envVarPrefix: DB
  observability:
    autoInstrumentation:
      enabled: true
      runtime: java